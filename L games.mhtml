<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1.0"
    />
    <title>L Unblocked Games</title>
    <style>
      body {
        margin: 0;
        padding: 0;
        font-family: Arial,sans-serif;
        color: #fff;
        text-align: center;
        overflow-x: hidden;
        background: #000;
      }

      canvas#stars {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: -1;
      }

      #loginScreen {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: transparent;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        z-index: 9999;
      }

      #loginScreen h2 {
        margin-bottom: 20px;
      }

      #passwordInput {
        padding: 10px;
        border-radius: 5px;
        border: none;
        width: 200px;
        text-align: center;
        font-size: 1em;
      }

      #loginBtn {
        margin-top: 15px;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        background: #444;
        color: #fff;
        cursor: pointer;
      }

      #loginBtn:hover { background: #666; }

      #errorMsg {
        margin-top: 10px;
        color: red;
        display: none;
      }

      #mainContent { display: none; }

      header {
        padding: 20px;
        font-size: 2em;
        font-weight: bold;
      }

      #searchBar {
        margin: 10px auto 20px auto;
        padding: 10px;
        width: 60%;
        border-radius: 8px;
        border: none;
        font-size: 1em;
        text-align: center;
        display: block;
      }

      .games {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(180px,1fr));
        gap: 20px;
        margin: 20px;
      }

      .game-card {
        background: #111;
        padding: 15px;
        border-radius: 12px;
        box-shadow: 0 0 12px rgba(255,255,255,0.15);
        display: flex;
        flex-direction: column;
        align-items: center;
        transition: transform 0.2s;
        cursor: pointer;
      }

      .game-card:hover { transform: scale(1.05); }
      .game-card img { width: 100%; max-height: 120px; object-fit: cover; border-radius: 8px; }
      .game-card h3 { margin: 10px 0 0 0; font-size: 1.1em; }

      #gameFrameContainer { margin: 20px auto; max-width: 90%; display: none; flex-direction: column; align-items: center; }
      #gameFrame { width: 100%; height: 500px; border: none; background: #000; }

      #fullscreenBtn { padding: 8px 15px; margin-top: 10px; border: none; border-radius: 5px; background: #444; color: #fff; cursor: pointer; }
      #fullscreenBtn:hover { background: #666; }

      #unblocker { margin-top: 30px; padding: 20px; background: #111; border-top: 2px solid #444; }
      #urlInput { width: 60%; padding: 8px; border-radius: 5px; border: none; }
      #loadBtn { padding: 8px 15px; margin-left: 10px; border: none; border-radius: 5px; background: #444; color: #fff; cursor: pointer; }
      #loadBtn:hover { background: #666; }

      #unblockedSites {
        margin-top: 20px;
        padding: 20px;
        background: #111;
        border-top: 2px solid #444;
        text-align: left;
        max-width: 90%;
        margin-left: auto;
        margin-right: auto;
      }
      #unblockedSites h3 { color:#fff; margin-bottom:10px; }
      #unblockedSites ul { list-style: none; padding-left: 0; }
      #unblockedSites li { margin-bottom:5px; }
      #unblockedSites a { color: #0f0; text-decoration: none; }
      #unblockedSites a:hover { text-decoration: underline; }
    </style>
  </head>
  <body>
    <canvas id="stars"></canvas>

    <div id="loginScreen">
      <h2>Enter Password</h2>
      <input
        type="password"
        id="passwordInput"
        placeholder="Password"
      />
      <button id="loginBtn">Enter</button>
      <div id="errorMsg">
        Wrong password, try again.
      </div>
    </div>

    <div id="mainContent">
      <header>L Unblocked Games V3</header>
      <input
        type="text"
        id="searchBar"
        placeholder="Search games..."
        onkeyup="searchGames()"
      />
      <p
        style="color:#f88; font-size:0.9em; margin-top:-10px; margin-bottom:20px;"
      >
        All games might not work for now, so use
        the websites at hand or the unblocker.
      </p>

      <div class="games" id="gameList"></div>

      <div id="gameFrameContainer">
        <iframe id="gameFrame" allowfullscreen></iframe>
        <button id="fullscreenBtn" onclick="goFullscreen()">Go Fullscreen</button>
      </div>

      <div id="unblocker">
        <h2>Unblocker</h2>
        <input
          type="text"
          id="urlInput"
          placeholder="Enter a URL to unblock..."
        />
        <button id="loadBtn" onclick="unblock()">
          Go
        </button>
      </div>

      <div id="unblockedSites">
        <h3>Unblocked Websites:</h3>
        <ul>
          <li><a href="https://whitespace.eu.com" target="_blank">Whitespace.eu.com</a></li>
          <li><a href="https://crazygames.com" target="_blank">CrazyGames.com</a></li>
          <li><a href="https://classic.minecraft.net" target="_blank">Minecraft Classic</a></li>
          <li><a href="https://bitlifeonline.com" target="_blank">BitLife Online</a></li>
          <li><a href="https://1v1.lol" target="_blank">1v1.LOL</a></li>
          <li><a href="https://skribbl.io" target="_blank">Skribbl.io</a></li>
          <li><a href="https://agar.io" target="_blank">Agar.io</a></li>
          <li><a href="https://slither.io" target="_blank">Slither.io</a></li>
          <li><a href="https://yohoho-io.top" target="_blank">Yohoo.io</a></li>
        </ul>
      </div>
    </div>

    <script>
      // PASSWORD
      (function(){
        const PASSWORD = "pass2025";
        const loginScreen = document.getElementById("loginScreen");
        const mainContent = document.getElementById("mainContent");
        const passwordInput = document.getElementById("passwordInput");
        const loginBtn = document.getElementById("loginBtn");
        const errorMsg = document.getElementById("errorMsg");
        function showError(show){ errorMsg.style.display = show ? "block" : "none"; }
        function checkPassword(){
          const val = passwordInput.value.trim();
          if(val === PASSWORD){
            loginScreen.style.display = "none";
            mainContent.style.display = "block";
            passwordInput.value = "";
            showError(false);
          } else { showError(true); }
        }
        loginBtn.addEventListener("click", checkPassword);
        passwordInput.addEventListener("keyup", function(e){ if(e.key==="Enter") checkPassword(); });
      })();

      // GAMES
      const games = [
        {name:"Yohoo.io", img:"https://img.icons8.com/color/200/yohoho.png", url:"https://yohoho.io/"},
        {name:"Yohoo Battle", img:"https://img.icons8.com/color/200/yohoho.png", url:"https://yohoho-io.top/"},
        {name:"Yohoo Arena", img:"https://img.icons8.com/color/200/yohoho.png", url:"https://yohooarena.com/"},
        {name:"Yohoo Survival", img:"https://img.icons8.com/color/200/yohoho.png", url:"https://yohoosurvival.com/"},
        {name:"Yohoo Adventure", img:"https://img.icons8.com/color/200/yohoho.png", url:"https://yohoo-adventure.com/"},
        {name:"Escape Road", img:"https://img.icons8.com/color/200/road.png", url:"https://escaperoad.io/"},
        {name:"1v1.LOL", img:"https://img.icons8.com/color/200/battle.png", url:"https://1v1.lol/"},
        {name:"BitLife Online", img:"https://img.icons8.com/color/200/bitlife.png", url:"https://bitlifeonline.com/"},
        {name:"Slither.io", img:"https://img.icons8.com/color/200/slither.png", url:"https://slither.io/"},
        {name:"Agar.io", img:"https://img.icons8.com/color/200/agar.png", url:"https://agar.io/"},
        {name:"Skribbl.io", img:"https://img.icons8.com/color/200/skribbl.png", url:"https://skribbl.io/"},
        {name:"Freezenova", img:"https://img.icons8.com/color/200/ice.png", url:"https://freezenova.com/"}
      ];

      // CREATE GAME CARDS
      const gameList = document.getElementById("gameList");
      games.forEach(game=>{
        const card = document.createElement("div");
        card.className = "game-card";
        card.innerHTML = `<img src="${game.img}" alt="${game.name}"><h3>${game.name}</h3>`;
        card.addEventListener("click", ()=>loadGame(game.url));
        gameList.appendChild(card);
      });

      // SEARCH
      function searchGames(){
        const q = document.getElementById("searchBar").value.toLowerCase();
        document.querySelectorAll(".game-card").forEach(card=>{
          const name = card.querySelector("h3").innerText.toLowerCase();
          card.style.display = name.includes(q)?"flex":"none";
        });
      }

      // LOAD GAME
      function loadGame(url){
        if(!url) return;
        const iframeContainer = document.getElementById("gameFrameContainer");
        const iframe = document.getElementById("gameFrame");
        iframe.src = url;
        iframeContainer.style.display = "flex";
        iframe.scrollIntoView({behavior:"smooth"});
      }

      // FULLSCREEN with button toggle
      function goFullscreen(){
        const iframe = document.getElementById("gameFrame");
        const btn = document.getElementById("fullscreenBtn");

        if (!document.fullscreenElement) {
          if(iframe.requestFullscreen){ 
            iframe.requestFullscreen(); 
          } else if(iframe.webkitRequestFullscreen){ 
            iframe.webkitRequestFullscreen(); 
          } else if(iframe.msRequestFullscreen){ 
            iframe.msRequestFullscreen(); 
          }
          iframe.style.width = "100vw";
          iframe.style.height = "100vh";
          btn.innerText = "Exit Fullscreen";
        } else {
          if(document.exitFullscreen){
            document.exitFullscreen();
          } else if(document.webkitExitFullscreen){
            document.webkitExitFullscreen();
          } else if(document.msExitFullscreen){
            document.msExitFullscreen();
          }
          iframe.style.width = "100%";
          iframe.style.height = "500px";
          iframe.scrollIntoView({behavior:"smooth"});
          btn.innerText = "Go Fullscreen";
        }
      }

      // Update button if user exits fullscreen via Esc
      document.addEventListener('fullscreenchange', () => {
        const btn = document.getElementById("fullscreenBtn");
        if (!document.fullscreenElement) btn.innerText = "Go Fullscreen";
      });

      // UNBLOCKER
      function unblock(){
        const url = document.getElementById("urlInput").value;
        if(!url) return;
        loadGame(url.startsWith("http") ? url : "https://"+url);
      }

      // STARFIELD, SHOOTING STARS & ASTEROID METEORS (glowing & slower)
      const canvas = document.getElementById("stars");
      const ctx = canvas.getContext("2d");
      let stars=[], shootingStars=[], meteors=[], sparks=[];
      const numStars=200, numShooting=3, numMeteors=2;

      function resizeCanvas(){ canvas.width=window.innerWidth; canvas.height=window.innerHeight; }
      window.addEventListener("resize", resizeCanvas);
      resizeCanvas();

      function initObjects(){
        stars=[];
        for(let i=0;i<numStars;i++){ stars.push({x:Math.random()*canvas.width, y:Math.random()*canvas.height, r:Math.random()*1.5, d: Math.random()*0.5+0.2}); }
        shootingStars=[];
        for(let i=0;i<numShooting;i++){ shootingStars.push({x:Math.random()*canvas.width, y:Math.random()*canvas.height/2, len:Math.random()*80+50, speed:Math.random()*5+3, angle:Math.random()*0.2-0.1, opacity:1}); }
        meteors=[];
        for(let i=0;i<numMeteors;i++){ meteors.push({x:Math.random()*canvas.width, y:Math.random()*canvas.height/2, len:Math.random()*100+80, speed:Math.random()*7+5, angle:Math.random()*0.3+0.2, opacity:1}); }
        sparks=[];
      }
      initObjects();

      function createSparks(x,y,count=8){
        for(let i=0;i<count;i++){ sparks.push({x:x,y:y,vx:Math.random()*6-3,vy:Math.random()*6-3,r:Math.random()*2+1,opacity:1}); }
      }

      function draw(){
        ctx.clearRect(0,0,canvas.width,canvas.height);

        // stars
        ctx.fillStyle="#fff";
        stars.forEach(s=>{
          ctx.beginPath(); ctx.arc(s.x,s.y,s.r,0,Math.PI*2); ctx.fill();
          s.y+=s.d; if(s.y>canvas.height){ s.y=0; s.x=Math.random()*canvas.width; }
        });

        // shooting stars (slower)
        shootingStars.forEach(s=>{
          ctx.strokeStyle=`rgba(255,255,255,${s.opacity})`; ctx.lineWidth=2;
          ctx.beginPath(); ctx.moveTo(s.x,s.y); ctx.lineTo(s.x+s.len,s.y+s.len*s.angle); ctx.stroke();
          s.x += s.speed*0.4; s.y += s.speed*s.angle*0.4; s.opacity-=0.01;
          if(s.opacity<=0||s.x>canvas.width||s.y>canvas.height){ s.x=Math.random()*canvas.width; s.y=Math.random()*canvas.height/2; s.len=Math.random()*80+50; s.speed=Math.random()*5+3; s.angle=Math.random()*0.2-0.1; s.opacity=1; }
        });

        // meteors (asteroids with fiery glow, slower)
        meteors.forEach(m=>{
          const grad = ctx.createRadialGradient(m.x,m.y,0,m.x,m.y,m.len/10);
          grad.addColorStop(0, `rgba(255,150,50,${m.opacity})`);
          grad.addColorStop(0.5, `rgba(255,100,20,${m.opacity*0.7})`);
          grad.addColorStop(1, `rgba(200,180,150,0)`);
          ctx.fillStyle = grad;
          ctx.beginPath();
          const size = m.len/10;
          ctx.moveTo(m.x,m.y);
          for(let i=0;i<6;i++){ const angle=i/6*Math.PI*2; const radius=size*(0.7+Math.random()*0.6); ctx.lineTo(m.x+radius*Math.cos(angle), m.y+radius*Math.sin(angle)); }
          ctx.closePath(); ctx.fill();
          createSparks(m.x,m.y,2);
          m.x += m.speed*0.5; m.y += m.speed*m.angle*0.5; m.opacity-=0.01;
          if(m.opacity<=0||m.x>canvas.width||m.y>canvas.height){
            createSparks(m.x,m.y,10);
            m.x=Math.random()*canvas.width; m.y=Math.random()*canvas.height/2;
            m.len=Math.random()*100+80;
            m.speed=Math.random()*7+5;
            m.angle=Math.random()*0.3+0.2;
            m.opacity=1;
          }
        });

        // sparks
        sparks.forEach((sp,i)=>{
          ctx.fillStyle=`rgba(255,255,200,${sp.opacity})`;
          ctx.beginPath(); ctx.arc(sp.x,sp.y,sp.r,0,Math.PI*2); ctx.fill();
          sp.x+=sp.vx; sp.y+=sp.vy; sp.opacity-=0.02;
          if(sp.opacity<=0) sparks.splice(i,1);
        });

        requestAnimationFrame(draw);
      }
      draw();
    </script>
  </body>
</html>
